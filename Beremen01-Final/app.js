// –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è GitHub Pages
class Beremen01App {
    constructor() {
        this.userId = this.getUserId();
        this.init();
    }

    getUserId() {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let userId = localStorage.getItem('beremen01_user_id');
        if (!userId) {
            userId = 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('beremen01_user_id', userId);
        }
        return userId;
    }

    init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const savedData = localStorage.getItem('beremen01_user_data');
        if (savedData) {
            this.showMainMenu();
        } else {
            this.showWelcome();
        }
    }

    showWelcome() {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="welcome">
                <div class="emoji">ü§∞</div>
                <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Beremen01!</h1>
                <p>–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏</p>
                <div class="welcome-features">
                    <div class="feature-item">‚öñÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–µ—Å–∞</div>
                    <div class="feature-item">ü©∏ –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–∞–≤–ª–µ–Ω–∏—è</div>
                    <div class="feature-item">üòä –î–Ω–µ–≤–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</div>
                    <div class="feature-item">üçØ –ö–æ–Ω—Ç—Ä–æ–ª—å —Å–∞—Ö–∞—Ä–∞</div>
                </div>
                <button onclick="app.startApp()" class="btn-primary">–ù–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</button>
            </div>
        `;
    }

    startApp() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        localStorage.setItem('beremen01_user_data', JSON.stringify({
            startDate: new Date().toISOString(),
            userId: this.userId
        }));
        this.showMainMenu();
    }

    showMainMenu() {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="main-menu">
                <div class="header">
                    <h2>Beremen01</h2>
                    <div class="user-info">ID: ${this.userId.substring(0, 8)}...</div>
                </div>
                
                <div class="menu-grid">
                    <div class="menu-item" onclick="app.showWeight()">
                        <div class="menu-icon">‚öñÔ∏è</div>
                        <div class="menu-title">–í–µ—Å</div>
                        <div class="menu-desc">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–µ—Å–∞</div>
                    </div>
                    <div class="menu-item" onclick="app.showPressure()">
                        <div class="menu-icon">ü©∏</div>
                        <div class="menu-title">–î–∞–≤–ª–µ–Ω–∏–µ</div>
                        <div class="menu-desc">–ö–æ–Ω—Ç—Ä–æ–ª—å –ê–î</div>
                    </div>
                    <div class="menu-item" onclick="app.showMood()">
                        <div class="menu-icon">üòä</div>
                        <div class="menu-title">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</div>
                        <div class="menu-desc">–î–Ω–µ–≤–Ω–∏–∫ —ç–º–æ—Ü–∏–π</div>
                    </div>
                    <div class="menu-item" onclick="app.showSugar()">
                        <div class="menu-icon">üçØ</div>
                        <div class="menu-title">–°–∞—Ö–∞—Ä</div>
                        <div class="menu-desc">–£—Ä–æ–≤–µ–Ω—å –≥–ª—é–∫–æ–∑—ã</div>
                    </div>
                </div>
                
                <div class="stats-summary">
                    <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <span class="stat-number">${this.getWeightEntries().length}</span>
                            <span class="stat-label">–ó–∞–ø–∏—Å–µ–π –≤–µ—Å–∞</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">${this.getPressureEntries().length}</span>
                            <span class="stat-label">–ò–∑–º–µ—Ä–µ–Ω–∏–π –ê–î</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">${this.getMoodEntries().length}</span>
                            <span class="stat-label">–ó–∞–ø–∏—Å–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">${this.getSugarEntries().length}</span>
                            <span class="stat-label">–ò–∑–º–µ—Ä–µ–Ω–∏–π —Å–∞—Ö–∞—Ä–∞</span>
                        </div>
                    </div>
                </div>
                
                <div class="menu-actions">
                    <button onclick="app.showSettings()" class="btn-secondary">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</button>
                    <button onclick="app.resetData()" class="btn-danger">–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</button>
                </div>
            </div>
        `;
    }

    showWeight() {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="weight-page">
                <h2>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–µ—Å–∞</h2>
                <div class="input-group">
                    <label>–í–µ—Å (–∫–≥):</label>
                    <input type="number" id="weight" step="0.1" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å">
                </div>
                <div class="input-group">
                    <label>–î–∞—Ç–∞:</label>
                    <input type="date" id="weight-date">
                </div>
                <button onclick="app.saveWeight()" class="btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button onclick="app.showMainMenu()" class="btn-secondary">–ù–∞–∑–∞–¥</button>
                <div id="weight-history"></div>
            </div>
        `;
        document.getElementById('weight-date').value = new Date().toISOString().split('T')[0];
        this.loadWeightHistory();
    }

    saveWeight() {
        const weight = document.getElementById('weight').value;
        const date = document.getElementById('weight-date').value;
        
        if (!weight || !date) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }

        const weightData = JSON.parse(localStorage.getItem('weight_data') || '[]');
        weightData.push({ weight: parseFloat(weight), date, userId: this.userId });
        localStorage.setItem('weight_data', JSON.stringify(weightData));
        
        alert('–í–µ—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
        this.loadWeightHistory();
    }

    loadWeightHistory() {
        const weightData = JSON.parse(localStorage.getItem('weight_data') || '[]');
        const userData = weightData.filter(item => item.userId === this.userId);
        
        const historyDiv = document.getElementById('weight-history');
        if (userData.length > 0) {
            historyDiv.innerHTML = `
                <h3>–ò—Å—Ç–æ—Ä–∏—è –≤–µ—Å–∞:</h3>
                <div class="history-list">
                    ${userData.map(item => `
                        <div class="history-item">
                            <span>${item.date}</span>
                            <span>${item.weight} –∫–≥</span>
                        </div>
                    `).join('')}
                </div>
            `;
        }
    }

    showPressure() {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="pressure-page">
                <h2>–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–∞–≤–ª–µ–Ω–∏—è</h2>
                <div class="input-group">
                    <label>–°–∏—Å—Ç–æ–ª–∏—á–µ—Å–∫–æ–µ (–≤–µ—Ä—Ö–Ω–µ–µ):</label>
                    <input type="number" id="systolic" placeholder="120">
                </div>
                <div class="input-group">
                    <label>–î–∏–∞—Å—Ç–æ–ª–∏—á–µ—Å–∫–æ–µ (–Ω–∏–∂–Ω–µ–µ):</label>
                    <input type="number" id="diastolic" placeholder="80">
                </div>
                <div class="input-group">
                    <label>–î–∞—Ç–∞:</label>
                    <input type="date" id="pressure-date">
                </div>
                <button onclick="app.savePressure()" class="btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button onclick="app.showMainMenu()" class="btn-secondary">–ù–∞–∑–∞–¥</button>
                <div id="pressure-history"></div>
            </div>
        `;
        document.getElementById('pressure-date').value = new Date().toISOString().split('T')[0];
        this.loadPressureHistory();
    }

    savePressure() {
        const systolic = document.getElementById('systolic').value;
        const diastolic = document.getElementById('diastolic').value;
        const date = document.getElementById('pressure-date').value;
        
        if (!systolic || !diastolic || !date) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }

        const pressureData = JSON.parse(localStorage.getItem('pressure_data') || '[]');
        pressureData.push({ systolic: parseInt(systolic), diastolic: parseInt(diastolic), date, userId: this.userId });
        localStorage.setItem('pressure_data', JSON.stringify(pressureData));
        
        alert('–î–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!');
        this.loadPressureHistory();
    }

    loadPressureHistory() {
        const pressureData = JSON.parse(localStorage.getItem('pressure_data') || '[]');
        const userData = pressureData.filter(item => item.userId === this.userId);
        
        const historyDiv = document.getElementById('pressure-history');
        if (userData.length > 0) {
            historyDiv.innerHTML = `
                <h3>–ò—Å—Ç–æ—Ä–∏—è –¥–∞–≤–ª–µ–Ω–∏—è:</h3>
                <div class="history-list">
                    ${userData.map(item => `
                        <div class="history-item">
                            <span>${item.date}</span>
                            <span>${item.systolic}/${item.diastolic}</span>
                        </div>
                    `).join('')}
                </div>
            `;
        }
    }

    showMood() {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="mood-page">
                <h2>–î–Ω–µ–≤–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</h2>
                <div class="input-group">
                    <label>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (1-10):</label>
                    <input type="range" id="mood" min="1" max="10" value="5">
                    <span id="mood-value">5</span>
                </div>
                <div class="input-group">
                    <label>–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ (1-10):</label>
                    <input type="range" id="wellbeing" min="1" max="10" value="5">
                    <span id="wellbeing-value">5</span>
                </div>
                <div class="input-group">
                    <label>–î–∞—Ç–∞:</label>
                    <input type="date" id="mood-date">
                </div>
                <button onclick="app.saveMood()" class="btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button onclick="app.showMainMenu()" class="btn-secondary">–ù–∞–∑–∞–¥</button>
                <div id="mood-history"></div>
            </div>
        `;
        document.getElementById('mood-date').value = new Date().toISOString().split('T')[0];
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ª–∞–π–¥–µ—Ä–æ–≤
        document.getElementById('mood').oninput = function() {
            document.getElementById('mood-value').textContent = this.value;
        };
        document.getElementById('wellbeing').oninput = function() {
            document.getElementById('wellbeing-value').textContent = this.value;
        };
        
        this.loadMoodHistory();
    }

    saveMood() {
        const mood = document.getElementById('mood').value;
        const wellbeing = document.getElementById('wellbeing').value;
        const date = document.getElementById('mood-date').value;
        
        if (!date) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É');
            return;
        }

        const moodData = JSON.parse(localStorage.getItem('mood_data') || '[]');
        moodData.push({ mood: parseInt(mood), wellbeing: parseInt(wellbeing), date, userId: this.userId });
        localStorage.setItem('mood_data', JSON.stringify(moodData));
        
        alert('–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!');
        this.loadMoodHistory();
    }

    loadMoodHistory() {
        const moodData = JSON.parse(localStorage.getItem('mood_data') || '[]');
        const userData = moodData.filter(item => item.userId === this.userId);
        
        const historyDiv = document.getElementById('mood-history');
        if (userData.length > 0) {
            historyDiv.innerHTML = `
                <h3>–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:</h3>
                <div class="history-list">
                    ${userData.map(item => `
                        <div class="history-item">
                            <span>${item.date}</span>
                            <span>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${item.mood}/10</span>
                            <span>–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ: ${item.wellbeing}/10</span>
                        </div>
                    `).join('')}
                </div>
            `;
        }
    }

    showSugar() {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="sugar-page">
                <h2>–ö–æ–Ω—Ç—Ä–æ–ª—å —Å–∞—Ö–∞—Ä–∞</h2>
                <div class="input-group">
                    <label>–£—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ (–º–º–æ–ª—å/–ª):</label>
                    <input type="number" id="sugar" step="0.1" placeholder="5.5">
                </div>
                <div class="input-group">
                    <label>–î–∞—Ç–∞:</label>
                    <input type="date" id="sugar-date">
                </div>
                <button onclick="app.saveSugar()" class="btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button onclick="app.showMainMenu()" class="btn-secondary">–ù–∞–∑–∞–¥</button>
                <div id="sugar-history"></div>
            </div>
        `;
        document.getElementById('sugar-date').value = new Date().toISOString().split('T')[0];
        this.loadSugarHistory();
    }

    saveSugar() {
        const sugar = document.getElementById('sugar').value;
        const date = document.getElementById('sugar-date').value;
        
        if (!sugar || !date) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }

        const sugarData = JSON.parse(localStorage.getItem('sugar_data') || '[]');
        sugarData.push({ sugar: parseFloat(sugar), date, userId: this.userId });
        localStorage.setItem('sugar_data', JSON.stringify(sugarData));
        
        alert('–£—Ä–æ–≤–µ–Ω—å —Å–∞—Ö–∞—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
        this.loadSugarHistory();
    }

    loadSugarHistory() {
        const sugarData = JSON.parse(localStorage.getItem('sugar_data') || '[]');
        const userData = sugarData.filter(item => item.userId === this.userId);
        
        const historyDiv = document.getElementById('sugar-history');
        if (userData.length > 0) {
            historyDiv.innerHTML = `
                <h3>–ò—Å—Ç–æ—Ä–∏—è —Å–∞—Ö–∞—Ä–∞:</h3>
                <div class="history-list">
                    ${userData.map(item => `
                        <div class="history-item">
                            <span>${item.date}</span>
                            <span>${item.sugar} –º–º–æ–ª—å/–ª</span>
                        </div>
                    `).join('')}
                </div>
            `;
        }
    }

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    getWeightEntries() {
        const weightData = JSON.parse(localStorage.getItem('weight_data') || '[]');
        return weightData.filter(item => item.userId === this.userId);
    }

    getPressureEntries() {
        const pressureData = JSON.parse(localStorage.getItem('pressure_data') || '[]');
        return pressureData.filter(item => item.userId === this.userId);
    }

    getMoodEntries() {
        const moodData = JSON.parse(localStorage.getItem('mood_data') || '[]');
        return moodData.filter(item => item.userId === this.userId);
    }

    getSugarEntries() {
        const sugarData = JSON.parse(localStorage.getItem('sugar_data') || '[]');
        return sugarData.filter(item => item.userId === this.userId);
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    showSettings() {
        const app = document.getElementById('app');
        app.innerHTML = `
            <div class="settings-page">
                <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                <div class="settings-section">
                    <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h3>
                    <div class="setting-item">
                        <label>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>
                        <input type="text" value="${this.userId}" readonly>
                    </div>
                    <div class="setting-item">
                        <label>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</label>
                        <input type="text" value="${new Date().toLocaleDateString()}" readonly>
                    </div>
                </div>
                
                <div class="settings-section">
                    <h3>–î–∞–Ω–Ω—ã–µ</h3>
                    <div class="setting-item">
                        <label>–ó–∞–ø–∏—Å–µ–π –≤–µ—Å–∞:</label>
                        <span>${this.getWeightEntries().length}</span>
                    </div>
                    <div class="setting-item">
                        <label>–ò–∑–º–µ—Ä–µ–Ω–∏–π –¥–∞–≤–ª–µ–Ω–∏—è:</label>
                        <span>${this.getPressureEntries().length}</span>
                    </div>
                    <div class="setting-item">
                        <label>–ó–∞–ø–∏—Å–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:</label>
                        <span>${this.getMoodEntries().length}</span>
                    </div>
                    <div class="setting-item">
                        <label>–ò–∑–º–µ—Ä–µ–Ω–∏–π —Å–∞—Ö–∞—Ä–∞:</label>
                        <span>${this.getSugarEntries().length}</span>
                    </div>
                </div>
                
                <div class="settings-actions">
                    <button onclick="app.exportData()" class="btn-primary">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</button>
                    <button onclick="app.showMainMenu()" class="btn-secondary">–ù–∞–∑–∞–¥</button>
                </div>
            </div>
        `;
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    exportData() {
        const data = {
            userId: this.userId,
            exportDate: new Date().toISOString(),
            weight: this.getWeightEntries(),
            pressure: this.getPressureEntries(),
            mood: this.getMoodEntries(),
            sugar: this.getSugarEntries()
        };
        
        const dataStr = JSON.stringify(data, null, 2);
        const dataBlob = new Blob([dataStr], {type: 'application/json'});
        const url = URL.createObjectURL(dataBlob);
        
        const link = document.createElement('a');
        link.href = url;
        link.download = `beremen01_data_${new Date().toISOString().split('T')[0]}.json`;
        link.click();
        
        URL.revokeObjectURL(url);
        alert('–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
    }

    // –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
    resetData() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            localStorage.removeItem('weight_data');
            localStorage.removeItem('pressure_data');
            localStorage.removeItem('mood_data');
            localStorage.removeItem('sugar_data');
            localStorage.removeItem('beremen01_user_data');
            
            alert('–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã!');
            this.showWelcome();
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new Beremen01App();
